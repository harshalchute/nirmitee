{"ast":null,"code":"import { postConstants } from \"./constants\";\nimport axios from \"axios\";\nconst baseURL = \"http://localhost:8000\";\nexport const createPost = data => {\n  console.log(data);\n  return async dispatch => {\n    dispatch({\n      type: postConstants.POST_REQUEST\n    });\n    try {\n      await axios.post(baseURL + `/posts`, data).then(response => {\n        console.log(response.data);\n        dispatch({\n          type: postConstants.POST_CREATE_SUCCESS,\n          payload: {\n            posts: response.data\n          }\n        });\n      }).catch(error => {\n        dispatch({\n          type: postConstants.POST_CREATE_FAILURE,\n          payload: error\n        });\n      });\n    } catch (error) {\n      console.log(error.response);\n      dispatch({\n        type: postConstants.POST_CREATE_FAILURE,\n        payload: error\n      });\n    }\n  };\n};\nexport const getAllPost = () => {\n  return async dispatch => {\n    dispatch({\n      type: postConstants.POST_REQUEST\n    });\n    try {\n      await axios.get(baseURL + `/posts`).then(response => {\n        console.log(response.data);\n        dispatch({\n          type: postConstants.POST_GET_ALL_SUCCESS,\n          payload: {\n            posts: response.data\n          }\n        });\n      }).catch(error => {\n        dispatch({\n          type: postConstants.POST_CREATE_FAILURE,\n          payload: error\n        });\n      });\n    } catch (error) {\n      console.log(error.response);\n      dispatch({\n        type: postConstants.POST_GET_ALL_FAILURE,\n        payload: error\n      });\n    }\n  };\n};\nexport const getPostById = () => {};\nexport const editPostById = () => {};\nexport const deletePostById = postId => {\n  return async dispatch => {\n    dispatch({\n      type: postConstants.POST_REQUEST\n    });\n    try {\n      await axios.post(baseURL + `/posts/:postId`, data).then(response => {\n        console.log(response.data);\n        dispatch({\n          type: postConstants.POST_DELETE_SUCCESS,\n          payload: {}\n        });\n      }).catch(error => {\n        dispatch({\n          type: postConstants.POST_DELETE_FAILURE,\n          payload: error\n        });\n      });\n    } catch (error) {\n      console.log(error.response);\n      dispatch({\n        type: postConstants.POST_DELETE_FAILURE,\n        payload: error\n      });\n    }\n  };\n};","map":{"version":3,"names":["postConstants","axios","baseURL","createPost","data","console","log","dispatch","type","POST_REQUEST","post","then","response","POST_CREATE_SUCCESS","payload","posts","catch","error","POST_CREATE_FAILURE","getAllPost","get","POST_GET_ALL_SUCCESS","POST_GET_ALL_FAILURE","getPostById","editPostById","deletePostById","postId","POST_DELETE_SUCCESS","POST_DELETE_FAILURE"],"sources":["C:/Users/Harshal Chute/Music/Desktop/sam/task-post-app copy/src/actions/posts.actions.js"],"sourcesContent":["import { postConstants } from \"./constants\";\r\nimport axios from \"axios\";\r\n\r\nconst baseURL = \"http://localhost:8000\";\r\n\r\nexport const createPost = (data) => {\r\n    console.log(data)\r\n    return async dispatch => {\r\n        dispatch({ type: postConstants.POST_REQUEST });\r\n        try {\r\n            await axios.post(baseURL + `/posts`, data).then((response) => {\r\n                console.log(response.data);\r\n                dispatch({\r\n                    type: postConstants.POST_CREATE_SUCCESS,\r\n                    payload: {\r\n                        posts: response.data\r\n                    }\r\n                });\r\n            }).catch((error) => {\r\n                dispatch({\r\n                    type: postConstants.POST_CREATE_FAILURE,\r\n                    payload: error\r\n                });\r\n            });\r\n        } catch (error) {\r\n            console.log(error.response);\r\n            dispatch({\r\n                type: postConstants.POST_CREATE_FAILURE,\r\n                payload: error\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const getAllPost = () => {\r\n    return async dispatch => {\r\n        dispatch({ type: postConstants.POST_REQUEST });\r\n        try {\r\n            await axios.get(baseURL + `/posts`).then((response) => {\r\n                console.log(response.data);\r\n                dispatch({\r\n                    type: postConstants.POST_GET_ALL_SUCCESS,\r\n                    payload: {\r\n                        posts: response.data\r\n                    }\r\n                });\r\n            }).catch((error) => {\r\n                dispatch({\r\n                    type: postConstants.POST_CREATE_FAILURE,\r\n                    payload: error\r\n                });\r\n            });\r\n        } catch (error) {\r\n            console.log(error.response);\r\n            dispatch({\r\n                type: postConstants.POST_GET_ALL_FAILURE,\r\n                payload: error\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const getPostById = () => {\r\n\r\n}\r\n\r\nexport const editPostById = () => {\r\n\r\n}\r\n\r\nexport const deletePostById = (postId) => {\r\n    return async dispatch => {\r\n        dispatch({ type: postConstants.POST_REQUEST });\r\n        try {\r\n            await axios.post(baseURL + `/posts/:postId`, data).then((response) => {\r\n                console.log(response.data);\r\n                dispatch({\r\n                    type: postConstants.POST_DELETE_SUCCESS,\r\n                    payload: {}\r\n                });\r\n            }).catch((error) => {\r\n                dispatch({\r\n                    type: postConstants.POST_DELETE_FAILURE,\r\n                    payload: error\r\n                });\r\n            });\r\n        } catch (error) {\r\n            console.log(error.response);\r\n            dispatch({\r\n                type: postConstants.POST_DELETE_FAILURE,\r\n                payload: error\r\n            });\r\n        }\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}